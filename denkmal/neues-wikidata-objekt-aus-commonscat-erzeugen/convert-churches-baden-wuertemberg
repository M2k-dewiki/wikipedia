#!/usr/bin/perl

use strict;

# Crypt::SSLeay muss installiert sein fuer SSL-Support
# apt-get install libwww-mechanize-perl libio-socket-ssl-perl libnet-ssleay-perl
use WWW::Mechanize;
use Data::Dumper;
use HTML::FormatText;
my $USER_AGENT='Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36';
# See the autocheck parameter, which turns all HTTP errors into fatal errors. When you turn autocheck off, you will need to do all error checking yourself.
my $agent = WWW::Mechanize->new( agent => $USER_AGENT,  autocheck => 0 );

#http://glennf.com/writing/hexadecimal.url.encoding.html
# This pattern takes the hex characters and decodes them back into real characters. The function hex() turns a hex number into decimal; 
# there is no dec() that does the reverse in perl. The "e" at the end of the regexp means "evaluate the replacement pattern as an expression."
sub URLDecode {
    my $theURL = $_[0];
    $theURL =~ tr/+/ /;
    $theURL =~ s/%([a-fA-F0-9]{2,2})/chr(hex($1))/eg;
    $theURL =~ s/<!--(.|\n)*-->//g;
    return $theURL;
}

sub URLEncode {
    my $theURL = $_[0];
    $theURL =~ s/([\W])/"%" . uc(sprintf("%2.2x",ord($1)))/eg;
    return $theURL;
}



# https://commons.wikimedia.org/wiki/Category:Cultural_heritage_monuments_in_Schw%C3%A4bisch_Gm%C3%BCnd

# https://petscan.wmflabs.org/?pagepile=&project=wikimedia&categories=Cultural%20heritage%20monuments%20in%20Lower%20Saxony%0AChurches%20in%20Lower%20Saxony%0A&language=commons&edits%5Banons%5D=both&cb_labels_no_l=1&search_max_results=500&depth=10&cb_labels_yes_l=1&edits%5Bbots%5D=both&interface_language=en&active_tab=tab_output&sortby=title&wikidata_item=without&show_redirects=no&cb_labels_any_l=1&ns%5B14%5D=1&edits%5Bflagged%5D=both&ores_prob_to=&doit=


# https://petscan.wmflabs.org/?pagepile=&project=wikimedia&categories=Churches%20in%20Lower%20Saxony%0AChurches%20in%20Lower%20Saxony%0A&language=commons&edits%5Banons%5D=both&cb_labels_no_l=1&search_max_results=500&depth=10&cb_labels_yes_l=1&edits%5Bbots%5D=both&interface_language=en&active_tab=tab_output&sortby=title&wikidata_item=without&show_redirects=no&cb_labels_any_l=1&ns%5B14%5D=1&edits%5Bflagged%5D=both&ores_prob_to=&doit=

# https://commons.wikimedia.org/wiki/Category:Churches_in_Baden-W%C3%BCrttemberg

# 
# https://commons.wikimedia.org/wiki/Category:Chapels_in_Baden-W%C3%BCrttemberg
# 


# https://de.wikipedia.org/wiki/Liste_der_gr%C3%B6%C3%9Ften_St%C3%A4dte_in_Baden-W%C3%BCrttemberg


######################
# für größere Städte nach Verwaltungseinheit !!!

# Stuttgart:
# https://petscan.wmflabs.org/?cb_labels_yes_l=1&categories=Churches%20in%20Stuttgart%0A&edits%5Bbots%5D=both&edits%5Banons%5D=both&interface_language=en&active_tab=tab_pageprops&depth=20&negcats=Interiors%20of%20churches%20in%20Brandenburg&cb_labels_any_l=1&language=commons&search_max_results=500&wikidata_item=without&ns%5B14%5D=1&project=wikimedia&cb_labels_no_l=1&edits%5Bflagged%5D=both&show_redirects=no&wikidata_source_sites=&doit=
######################

# Besigheim
# https://petscan.wmflabs.org/?namespace_conversion=keep&cb_labels_yes_l=1&wpiu=any&search_max_results=500&source_combination=&regexp_filter=&common_wiki=auto&templates_yes=&interface_language=en&sortby=title&search_wiki=&minlinks=&common_wiki_other=&links_to_any=&categories=Cultural+heritage+monuments+in+Besigheim&language=commons&pagepile=&since_rev0=&cb_labels_no_l=1&edits%5Bbots%5D=both&links_to_no=&outlinks_any=&output_limit=&sortorder=ascending&sitelinks_any=&depth=10&show_redirects=no&outlinks_no=&min_sitelink_count=&maxlinks=&referrer_url=&ns%5B14%5D=1&page_image=any&edits%5Banons%5D=both&cb_labels_any_l=1&wikidata_prop_item_use=&langs_labels_no=&sitelinks_yes=&project=wikimedia&langs_labels_any=&before=&wikidata_item=without&doit=




# https://commons.wikimedia.org/wiki/Category:Cultural_heritage_monuments_in_Weil_der_Stadt
# https://petscan.wmflabs.org/?after=&output_compatability=catscan&labels_yes=&wikidata_item=without&ns%5B14%5D=1&cb_labels_no_l=1&depth=10&wikidata_source_sites=&active_tab=tab_output&edits%5Bbots%5D=both&langs_labels_yes=&langs_labels_any=&sitelinks_yes=&pagepile=&categories=Cultural+heritage+monuments+in+Weil+der+Stadt&min_sitelink_count=&language=commons&max_age=&links_to_any=&cb_labels_any_l=1&templates_yes=&subpage_filter=either&cb_labels_yes_l=1&interface_language=en&before=&sortorder=ascending&outlinks_any=&search_max_results=500&search_filter=&templates_no=&output_limit=&ores_prob_to=&show_redirects=no&referrer_url=&project=wikimedia&edits%5Banons%5D=both&namespace_conversion=keep&wikidata_prop_item_use=&sortby=title&langs_labels_no=&combination=subset&search_wiki=&min_redlink_count=1&doit=


# exclude:
#Altars in Baden-Württemberg
#Wall mounted church monuments in Baden-Württemberg
#Interiors of churches
#Pipe organs

my $INFILE = 'list.txt';

open ( IN, "< $INFILE") || die("cannot open $INFILE: $! \n");

my $count =0 ;
while(<IN>)
{
    chop;
    my $kat = $_;
    $kat =~ s/^(\s)*//og; # trim
    $kat =~ s/(\s)*$//og; # trim
    $kat =~ s/_/ /og; # trim

#    print "KAT:$kat:\n";
    if ($kat eq "") { next ; }

    # print "KAT:$kat:\n";
    
    my $lemma_mit_klammerzusatz = $kat;  # ohne präfix "category:"
    $lemma_mit_klammerzusatz =~ s/Category://iog;
    #fixme

    my $lemma_ohne_klammerzusatz = $lemma_mit_klammerzusatz;  # ohne präfix und klammerzusatz
    $lemma_ohne_klammerzusatz =~ s/\(.+\)//og;
    $lemma_ohne_klammerzusatz =~ s/^(\s)*//og; # trim
    $lemma_ohne_klammerzusatz =~ s/(\s)*$//og; # trim

    my $lemma_ohne_klammer_aber_mit_zusatz = $lemma_mit_klammerzusatz;  # ohne präfix 
    $lemma_ohne_klammer_aber_mit_zusatz =~ s/^(\s)*//og; # trim
    $lemma_ohne_klammer_aber_mit_zusatz =~ s/(\s)*$//og; # trim
    $lemma_ohne_klammer_aber_mit_zusatz =~ s/\(//og;
    $lemma_ohne_klammer_aber_mit_zusatz =~ s/\)//og;
    
    my $kat_mit_prefix = "Category:".$kat;

    my $klammerzusatz = "";
    if ($lemma_mit_klammerzusatz =~ /\((.+)\)/og) {
      $klammerzusatz = $1;
      # print "KLAMMERZUSATZ:$klammerzusatz:\n";
    }
    
##############

   #   my $url = 'https://commons.wikimedia.org/wiki/Category:Dorfkirche_(Herzsprung_in_der_Uckermark)';
     my $url = 'https://commons.wikimedia.org/wiki/Category:'.URLEncode($kat);
    
#      my $lemma = "";
#     my $lemma_decode = "";
#     if ($url =~ /Category:(.*)$/) {
#        $lemma = $1;
#        $lemma_decode = URLDecode($lemma);
#        $lemma_decode =~ s/_/ /og;
#      }
#       print "LEMMA:$lemma:DECODE:$lemma_decode:\n";
     
       my $check_url = $url.'?action=raw';
       # print "check URL:$check_url:\n"; # exit;

    $agent->get( $check_url );
  my $result2 = $agent->content;
  # print "RESULT:$result2:\n";
  
#       if ($result2 =~ /Wikidata infobox/i) {
#        print STDERR "Lemma $check_url hat Wikidata Infobox - do nothing\n";
#        next;
#     } 

  
#  my $blfd_id = "";
#  if ($result2 =~ /Baudenkmal Brandenburg/i) {
     # print "Lemma $check_url hat Baudenkmal-ID\n";
 
 #      if ($result2 =~ /(\s*)\{\{Baudenkmal Brandenburg(\s*)\|(1=)?(\s*)([0-9]+)/i) {
         # print "*** HIER: $1:$2:$3:$4:\n";
#           $blfd_id = $4;
 #          $blfd_id = $5;
 #    }
      #   print "Lemma $check_url hat Baudenkmal-ID $blfd_id:\n";
 #  } # Baudenkmal

my $north = "";
my $east = "";
  if ($result2 =~ /Object location/i) {
      # print "Lemma $check_url hat Object location\n";
      if ($result2 =~ /(\s*)\{\{Object location( dec)?(\s*)\|(\s*)([0-9\.]+)(\s*)\|(\s*)([0-9\.]+)(\s*)\}/i) {
       #  print "*** HIER: 1:$1:2.$2:3:$3:4:$4:5:$5:6:$6:7:$7:8:$8\n";
$north = $5;
$east = $8;
     }
        # print "Lemma $check_url hat location $north $east:\n";
   } # Baudenkmal
   
##############

    
    # print "KAT:$kat:LEMMA_MIT:$lemma_mit_klammerzusatz:LEMMA_OHNE:$lemma_ohne_klammerzusatz:\n";

#    if ($blfd_id ne  "") {
    
    print "CREATE\n";
   print "LAST\tLde\t\"$lemma_ohne_klammerzusatz\"\n"; # label de - bezeichnung
#    print "LAST\tLde\t\"$lemma_ohne_klammer_aber_mit_zusatz\"\n"; # label de - bezeichnung


    my $alias = $lemma_mit_klammerzusatz;
    if ($lemma_mit_klammerzusatz ne $lemma_ohne_klammerzusatz) {
      print "LAST\tAde\t\"$alias\"\n"; # alias de - alias
    }
  


#    my $beschreibung = "Bauwerk";
    my $beschreibung = "Kirchengebäude";
    if ($klammerzusatz ne "") { $beschreibung = $beschreibung." in ".$klammerzusatz; } # else { $beschreibung = $beschreibung." in Baden-Württemberg"; } 
        
    print "LAST\tDde\t\"$beschreibung\"\n"; # description de - beschreibung
    print "LAST\tScommonswiki\t\"$kat_mit_prefix\"\n"; # sitelink

    print "LAST\tP31\tQ16970\n"; # ist eine: Kirchengebäude
#    print "LAST\tP31\tQ108325\n"; # ist eine: Kapelle (Q108325)
#    print "LAST\tP31\tQ811979\n"; # ist eine: Bauwerk

print "LAST\tP17\tQ183\n"; # Staat: Deutschland
#    print "LAST\tP131\tQ4037\n"; # liegt in der Verwaltungseinheit: Schwäbisch Gmünd (Q985)

    print "LAST\tP131\tQ985\n"; # liegt in der Verwaltungseinheit: Baden-Württemberg (Q985)

#    print "LAST\tP131\tQ506323\n"; # liegt in der Verwaltungseinheit: Tettnang (Q506323)


#    print "LAST\tP131\tQ495428\n"; # liegt in der Verwaltungseinheit: # Bretten (Q495428)
#    print "LAST\tP131\tQ80980\n"; # liegt in der Verwaltungseinheit: # Pliezhausen (Q80980)
#    print "LAST\tP131\tQ5398\n"; # liegt in der Verwaltungseinheit: # Zülpich (Q5398)
#    print "LAST\tP131\tQ1022\n"; # liegt in der Verwaltungseinheit: Stuttgart (Q1022)    
#    print "LAST\tP131\tQ2119\n"; # liegt in der Verwaltungseinheit:     Mannheim (Q2119)
#    print "LAST\tP131\tQ1040\n"; # liegt in der Verwaltungseinheit:     Karlsruhe (Q1040)
#    print "LAST\tP131\tQ2833\n"; # liegt in der Verwaltungseinheit:     Freiburg im Breisgau (Q2833)
#    print "LAST\tP131\tQ2966\n"; # liegt in der Verwaltungseinheit:     Heidelberg (Q2966)
#    print "LAST\tP131\tQ3012\n"; # liegt in der Verwaltungseinheit:     Ulm (Q3012)
#    print "LAST\tP131\tQ146373\n"; # liegt in der Verwaltungseinheit:     Rosenfeld (Q146373)
	
#    print "LAST\tP131\tQ61825\n"; # liegt in der Verwaltungseinheit:     Besigheim (Q61825)
#    print "LAST\tP131\tQ13896\n"; # liegt in der Verwaltungseinheit:     Markgröningen (Q13896)
#    print "LAST\tP131\tQ7067\n"; # liegt in der Verwaltungseinheit:     Bietigheim-Bissingen (Q7067)
#    print "LAST\tP131\tQ61837\n"; # liegt in der Verwaltungseinheit:     Bönnigheim (Q61837)
#    print "LAST\tP131\tQ505147\n"; # liegt in der Verwaltungseinheit:     Weil der Stadt (Q505147)


    print "LAST\tP373\t\"$kat\"\n";   # Commonscat-Property
#    print "LAST\tP1435\tQ50378766\n";   # Schutzkategorie: Kulturdenkmal in Baden-Württemberg (Q50378766)
#    print "LAST\tP1435\tQ811165\n";   # Schutzkategorie: Baudenkmal 
#    print "LAST\tP2081\t\"$blfd_id\"\n";   # BLDAM-Objekt-ID 

if (($north ne "") && ($east ne "")) {
  my $cord = '@'.$north.'/'.$east;
    print "LAST\tP625\t$cord\n";   # koordinaten 
 }

# }
 



}
close(IN);
