#!/usr/bin/perl

use strict;

# Crypt::SSLeay muss installiert sein fuer SSL-Support
# apt-get install libwww-mechanize-perl libio-socket-ssl-perl libnet-ssleay-perl
use WWW::Mechanize;
use Data::Dumper;
use HTML::FormatText;
my $USER_AGENT='Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36';
# See the autocheck parameter, which turns all HTTP errors into fatal errors. When you turn autocheck off, you will need to do all error checking yourself.
my $agent = WWW::Mechanize->new( agent => $USER_AGENT,  autocheck => 0 );

#http://glennf.com/writing/hexadecimal.url.encoding.html
# This pattern takes the hex characters and decodes them back into real characters. The function hex() turns a hex number into decimal; 
# there is no dec() that does the reverse in perl. The "e" at the end of the regexp means "evaluate the replacement pattern as an expression."
sub URLDecode {
    my $theURL = $_[0];
    $theURL =~ tr/+/ /;
    $theURL =~ s/%([a-fA-F0-9]{2,2})/chr(hex($1))/eg;
    $theURL =~ s/<!--(.|\n)*-->//g;
    return $theURL;
}

sub URLEncode {
    my $theURL = $_[0];
    $theURL =~ s/([\W])/"%" . uc(sprintf("%2.2x",ord($1)))/eg;
    return $theURL;
}

#
# - baudenkmaler in Sachsen/Meißen + id
#
# Cultural heritage monuments in Saxony without linked Wikidata
# Dresden
# 
# https://petscan.wmflabs.org/?&search_max_results=500&cb_labels_yes_l=1&language=commons&edits%5Bbots%5D=both&edits%5Bflagged%5D=both&interface_language=en&edits%5Banons%5D=both&wikidata_item=without&project=wikimedia&depth=10&show_redirects=no&cb_labels_no_l=1&ns%5B14%5D=1&categories=Cultural%20heritage%20monuments%20in%20Saxony%20without%20linked%20Wikidata%0ADresden%0A&cb_labels_any_l=1&&doit=


# SELECT ?item ?itemLabel ?value ?liegt_in_der_Verwaltungseinheit ?liegt_in_der_VerwaltungseinheitLabel ?Bild WHERE {
#  ?item wdt:P1708 ?value.
#  ?item wdt:P131 wdt:Q8738.
#  SERVICE wikibase:label { bd:serviceParam wikibase:language "de,en". }
#  OPTIONAL { ?item wdt:P131 ?liegt_in_der_Verwaltungseinheit. }
#  OPTIONAL { ?item wdt:P18 ?Bild. }
# } order by ?liegt_in_der_VerwaltungseinheitLabel



my $INFILE = 'list.txt';

open ( IN, "< $INFILE") || die("cannot open $INFILE: $! \n");

my $count =0 ;
while(<IN>)
{
    chop;
    my $kat = $_;
    $kat =~ s/^(\s)*//og; # trim
    $kat =~ s/(\s)*$//og; # trim
    $kat =~ s/_/ /og; # trim
    
    # print "KAT:$kat:\n";
     if ($kat eq "") { next ; }
    my $lemma_mit_klammerzusatz = $kat;  # ohne präfix "category:"
    $lemma_mit_klammerzusatz =~ s/Category://iog;
    #fixme

    my $lemma_ohne_klammerzusatz = $lemma_mit_klammerzusatz;  # ohne präfix und klammerzusatz
    $lemma_ohne_klammerzusatz =~ s/\(.+\)//og;
    $lemma_ohne_klammerzusatz =~ s/^(\s)*//og; # trim
    $lemma_ohne_klammerzusatz =~ s/(\s)*$//og; # trim

    my $lemma_ohne_klammer_aber_mit_zusatz = $lemma_mit_klammerzusatz;  # ohne präfix 
    $lemma_ohne_klammer_aber_mit_zusatz =~ s/^(\s)*//og; # trim
    $lemma_ohne_klammer_aber_mit_zusatz =~ s/(\s)*$//og; # trim
    $lemma_ohne_klammer_aber_mit_zusatz =~ s/\(//og;
    $lemma_ohne_klammer_aber_mit_zusatz =~ s/\)//og;
    
    my $kat_mit_prefix = "Category:".$kat;

    my $klammerzusatz = "";
    if ($lemma_mit_klammerzusatz =~ /\((.+)\)/og) {
      $klammerzusatz = $1;
      # print "KLAMMERZUSATZ:$klammerzusatz:\n";
    }
    
##############

   #   my $url = 'https://commons.wikimedia.org/wiki/Category:Dorfkirche_(Herzsprung_in_der_Uckermark)';
     my $url = 'https://commons.wikimedia.org/wiki/Category:'.URLEncode($kat);
    
#      my $lemma = "";
#     my $lemma_decode = "";
#     if ($url =~ /Category:(.*)$/) {
#        $lemma = $1;
#        $lemma_decode = URLDecode($lemma);
#        $lemma_decode =~ s/_/ /og;
#      }
#       print "LEMMA:$lemma:DECODE:$lemma_decode:\n";
     
       my $check_url = $url.'?action=raw';
       # print "check URL:$check_url:\n"; # exit;

    $agent->get( $check_url );
  my $result2 = $agent->content;
  # print "RESULT:$result2:\n";
  
       if ($result2 =~ /Wikidata infobox/i) {
        # print STDERR "Lemma $check_url hat Wikidata Infobox - do nothing\n";
        # next;
     } 

  
  my $blfd_id = "";
  if ($result2 =~ /Kulturdenkmal Sachsen/i) {
     # print "Lemma $check_url hat Baudenkmal-ID\n";
 
       if ($result2 =~ /(\s*)\{\{Kulturdenkmal Sachsen(\s*)\|(1=)?(\s*)([0-9]+)/i) {
         # print "*** HIER: $1:$2:$3:$4:\n";
#           $blfd_id = $4;
           $blfd_id = $5;
     }
      #   print "Lemma $check_url hat Baudenkmal-ID $blfd_id:\n";
   } # Baudenkmal

my $north = "";
my $east = "";
  if ($result2 =~ /Object location/i) {
      # print "Lemma $check_url hat Object location\n";
      if ($result2 =~ /(\s*)\{\{Object location( dec)?(\s*)\|(\s*)([0-9\.]+)(\s*)\|(\s*)([0-9\.]+)(\s*)\}/i) {
       #  print "*** HIER: 1:$1:2.$2:3:$3:4:$4:5:$5:6:$6:7:$7:8:$8\n";
$north = $5;
$east = $8;
     }
        # print "Lemma $check_url hat location $north $east:\n";
   } # Baudenkmal
   
##############

    
    # print "KAT:$kat:LEMMA_MIT:$lemma_mit_klammerzusatz:LEMMA_OHNE:$lemma_ohne_klammerzusatz:\n";
    
    print "CREATE\n";
   print "LAST\tLde\t\"$lemma_ohne_klammerzusatz\"\n"; # label de - bezeichnung
   print "LAST\tLen\t\"$lemma_ohne_klammerzusatz\"\n"; # label de - bezeichnung
#    print "LAST\tLde\t\"$lemma_ohne_klammer_aber_mit_zusatz\"\n"; # label de - bezeichnung


    my $alias = $lemma_mit_klammerzusatz;
    if ($lemma_mit_klammerzusatz ne $lemma_ohne_klammerzusatz) {
      print "LAST\tAde\t\"$alias\"\n"; # alias de - alias
    }
  
     my $beschreibung = "Bauwerk in Dresden";
     my $beschreibung_en = "building in Dresden, Germany";

     
#     if ($klammerzusatz ne "") { $beschreibung = $beschreibung." in ".$klammerzusatz; }
        print "LAST\tDde\t\"$beschreibung\"\n"; # description de - beschreibung
        print "LAST\tDen\t\"$beschreibung_en\"\n"; # description de - beschreibung

    
    print "LAST\tScommonswiki\t\"$kat_mit_prefix\"\n"; # sitelink
#     print "LAST\tP31\tQ16970\n"; # ist eine: Kirchengebäude
     print "LAST\tP31\tQ811979\n"; # ist eine: Bauwerk
#     print "LAST\tP31\tQ56055312\n"; # ist eine: 	 Grabmal (Q56055312)

	 
    print "LAST\tP17\tQ183\n"; # Staat: Deutschland
#    print "LAST\tP131\tQ8738\n"; # liegt in der Verwaltungseinheit: Meißen
#    print "LAST\tP131\tQ1202\n"; # liegt in der Verwaltungseinheit: Sachsen


 print "LAST\tP131\tQ1731\n"; # liegt in der Verwaltungseinheit: Dresden
# print "LAST\tP131\tQ57837\n"; # liegt in der Verwaltungseinheit: Seiffen
#print "LAST\tP131\tQ3952\n"; # liegt in der Verwaltungseinheit: Plauen (Q3952)

# print "LAST\tP131\tQ81753\n"; # liegt in der Verwaltungseinheit: Weißenberg (Q81753)




#    print "LAST\tP131\tQ57828\n"; # liegt in der Verwaltungseinheit: Schönheide
    
    
    print "LAST\tP373\t\"$kat\"\n";   # Commonscat-Property
    
 #   print "LAST\tP1435\tQ811165\n";   # Schutzkategorie: Baudenkmal 
    print "LAST\tP1435\tQ19413851\n";   # Schutzkategorie (P1435): Kulturdenkmal in Sachsen (Q19413851)
    

    print "LAST\tP1708\t\"$blfd_id\"\n";   # LSFID
	
	### 
  #  print "LAST\tP669\tQ100936739\n";   # Straße: Oberwachwitzer Weg (Q100936739)
  #  print "LAST\tP276\tQ2538540\n";   # Wachwitz (Q2538540)
	### 
  
	
    
    if (($north ne "") && ($east ne "")) {
  my $cord = '@'.$north.'/'.$east;
    print "LAST\tP625\t$cord\n";   # koordinaten 
 }
   
# {{Object location|52.975743| 13.988022}}  {{Baudenkmal Brandenburg|09130507}}
# https://www.wikidata.org/wiki/Q101573281
# https://commons.wikimedia.org/wiki/Category:Dorfkirche_(Herzsprung_in_der_Uckermark)

# ytes +499‎  ‎Aussage erstellt: geographische Koordinaten (P625): 52°58'32.675"N, 13°59'16.879"E 
# Location coordinates in the form of @LAT/LON, with LAT and LON as decimal numbers.
# Example: Q3669835 TAB P625 TAB @43.26193/10.92708



}
close(IN);
